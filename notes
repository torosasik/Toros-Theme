Fix Major Performance Issues Based on PageSpeed Insights
You are working on a Shopify theme stored locally.
Your goal is to improve performance, speed, and SEO, while keeping all existing features and designs functional.
Use only safe, well-supported methods for Shopify (Liquid, JavaScript, CSS).
Do NOT remove essential functionality or visible elements.
Summarize planned changes before making them.

Here are the top priorities:
1. Optimize Images
Convert all JPG and PNG images in the theme to WebP format.

Replace all <img> tags to use .webp where possible, with fallback to original format for unsupported browsers.

Add width, height, and descriptive alt attributes to all images.

Make sure all product and collection images have properly-sized thumbnails (don’t load huge images if a small one is displayed).

Implement “lazy loading” (loading="lazy") for all non-critical images, especially below-the-fold and sliders.

2. Reduce Unused JavaScript and CSS
Identify and remove any unused JavaScript and CSS files from the theme.

Remove old or unused scripts (such as left-over app code from uninstalled apps).

Defer loading of non-essential JavaScript until after the main content loads.

If using jQuery or other large libraries only for a few features, replace with vanilla JS or lighter alternatives.

3. Eliminate Render-Blocking Resources
Defer or async all non-critical JavaScript (<script defer> or <script async> where possible).

Inline critical CSS for above-the-fold content. Defer or load other CSS after page load.

Move any non-essential scripts/styles to the end of the <body>.

4. Defer Offscreen Images
Ensure any images that are not immediately visible when the page loads (below-the-fold, in sliders, popups, etc.) use lazy loading.

Test the homepage to confirm only above-the-fold images load instantly.

5. Reduce Layout Shifts (CLS)
Add explicit width and height attributes to all images, banners, and embeds to prevent layout jumps as they load.

Reserve space in your HTML/CSS for major elements (e.g., sliders, banners, popups) so the layout doesn’t shift during loading.

6. Minimize and Optimize DOM Size
Remove unnecessary nested elements and redundant wrappers.

Clean up theme code to use the minimum required HTML elements for each section, while keeping appearance unchanged.

7. Optimize or Remove 3rd-Party Scripts
Review all 3rd-party scripts (Google Tag Manager, Facebook, Doofinder, Clevertar, Heroku, ShareThis, etc.).

Defer loading for these scripts, or move them to load after main content, except those absolutely required for critical features (like analytics or conversion tracking).

Remove any old, unused, or redundant 3rd-party scripts.

8. Accessibility & SEO Improvements
Add descriptive alt text for all images.

Add a meta description to the homepage and all major pages.

Make sure the site is not blocked from search engine indexing.

Ensure good heading structure and accessible forms/buttons.

How to Apply This:
List the files you plan to change, and your strategy for each step.

For each issue, check if it applies before making changes.

Apply changes and comment your code where you make optimizations.

Keep all current features and design working.

Provide a summary of changes at the end.

If any change could break the site or is risky, output a warning and ask for confirmation before proceeding.
If possible, show the before/after code snippets for review.

